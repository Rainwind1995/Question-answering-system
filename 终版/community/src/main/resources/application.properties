# 自定义访问端口
server.port=8080
# 自定义访问路径
server.servlet.context-path=/community
# 配置模板引擎 不进行缓存
spring.thymeleaf.cache=false

# DataSourceProperties(连接池配置)
# 数据库驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库连接的路径
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
# 用户名
spring.datasource.username=root
# 密码
spring.datasource.password=123456
# 数据库连接池
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 最大连接数
spring.datasource.hikari.maximum-pool-size=15
# 最小空闲连接数
spring.datasource.hikari.minimum-idle=5
# 超时时间
spring.datasource.hikari.idle-timeout=30000



# MybatisProperties(Mybatis 配置)
# 加载我们的mapper xml文件,用于解决当我们的mapper映射文件所在位置不同于mapper接口所在位置,如果位置相同就可以忽略这条代码
mybatis.mapper-locations=classpath:mapper/*.xml
# mybatis 自动扫描自定义的entity
mybatis.type-aliases-package=org.example.community.entity
# 数据库id自增长
mybatis.configuration.useGeneratedKeys=true
# 开启驼峰命名的方法
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger (设置日志级别为:debug)
logging.level.com.nowcoder.community=debug


# MailProperties(邮箱相关属性配置)
spring.mail.host=smtp.qq.com
# 邮箱（填写自己的就行，QQ邮箱不行就换其他类型的邮箱）
spring.mail.username=
# 授权密码,开通POP3/SMTP服务可以获取的（填写自己的）
spring.mail.password=
# 默认编码
spring.mail.default-encoding=UTF-8
# 端口
spring.mail.port=465
# 开启SSL安全模式
spring.mail.properties.mail.smtp.starttls.enable=true
# SSL 连接配置
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
# 开启 debug，这样方便开发者查看邮件发送日志
spring.mail.properties.mail.debug=true


# 配置域名(这里没有服务器先设置为本地)
community.path.domain=http://localhost:8080
# 配置头像上传路径(这里可以自己定义一个目录,我就直接存放到项目目录的static下)
community.path.upload=D:/java-workspace/community/community/src/main/resources/static/upload


# ReidsProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000


# ElasticSearchProperties
spring.data.elasticsearch.cluster-name=nowcoder
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300



# QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

# QiniuProperties
# 这里使用的是七牛云存储头像，相关设置填写自己的就行
qiniu.key.access=
qiniu.key.secret=
qiniu.bucket.header.name=
quniu.bucket.header.url=









